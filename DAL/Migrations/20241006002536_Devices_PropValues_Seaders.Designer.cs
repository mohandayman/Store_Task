// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20241006002536_Devices_PropValues_Seaders")]
    partial class Devices_PropValues_Seaders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImgUrl = "~/assets/img/Laptops.png",
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            ImgUrl = "./assets/img/Printers.jpg",
                            Name = "Printer"
                        },
                        new
                        {
                            Id = 3,
                            ImgUrl = "./assets/img/Switches.jpg",
                            Name = "Switch"
                        });
                });

            modelBuilder.Entity("DAL.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Acquisition_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acquisition_Date = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 1,
                            Name = "Zbook G3"
                        },
                        new
                        {
                            Id = 2,
                            Acquisition_Date = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 1,
                            Name = "MacBook Pro"
                        },
                        new
                        {
                            Id = 3,
                            Acquisition_Date = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 1,
                            Name = "Dell XPS 13"
                        },
                        new
                        {
                            Id = 4,
                            Acquisition_Date = new DateTime(2023, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 2,
                            Name = "HP LaserJet"
                        },
                        new
                        {
                            Id = 5,
                            Acquisition_Date = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 2,
                            Name = "Epson EcoTank"
                        },
                        new
                        {
                            Id = 6,
                            Acquisition_Date = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 2,
                            Name = "Canon Pixma"
                        },
                        new
                        {
                            Id = 7,
                            Acquisition_Date = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 3,
                            Name = "Cisco Catalyst 9200"
                        },
                        new
                        {
                            Id = 8,
                            Acquisition_Date = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 3,
                            Name = "Netgear ProSAFE"
                        },
                        new
                        {
                            Id = 9,
                            Acquisition_Date = new DateTime(2023, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_Id = 3,
                            Name = "TP-Link TL-SG108"
                        });
                });

            modelBuilder.Entity("DAL.Models.DevicePropertyValue", b =>
                {
                    b.Property<int>("Device_Id")
                        .HasColumnType("int");

                    b.Property<int>("Property_Id")
                        .HasColumnType("int");

                    b.Property<string>("Property_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Device_Id", "Property_Id");

                    b.HasIndex("Property_Id");

                    b.ToTable("devicePropertyValues");

                    b.HasData(
                        new
                        {
                            Device_Id = 1,
                            Property_Id = 1,
                            Property_Value = "Core i7 8551Hq"
                        },
                        new
                        {
                            Device_Id = 1,
                            Property_Id = 2,
                            Property_Value = "16GB"
                        },
                        new
                        {
                            Device_Id = 1,
                            Property_Id = 3,
                            Property_Value = "512GB SSD"
                        },
                        new
                        {
                            Device_Id = 2,
                            Property_Id = 1,
                            Property_Value = "M1 Pro"
                        },
                        new
                        {
                            Device_Id = 2,
                            Property_Id = 2,
                            Property_Value = "32GB"
                        },
                        new
                        {
                            Device_Id = 2,
                            Property_Id = 3,
                            Property_Value = "1TB SSD"
                        },
                        new
                        {
                            Device_Id = 3,
                            Property_Id = 1,
                            Property_Value = "Core i5 1135G7"
                        },
                        new
                        {
                            Device_Id = 3,
                            Property_Id = 2,
                            Property_Value = "8GB"
                        },
                        new
                        {
                            Device_Id = 3,
                            Property_Id = 3,
                            Property_Value = "256GB SSD"
                        },
                        new
                        {
                            Device_Id = 4,
                            Property_Id = 4,
                            Property_Value = "20ppm"
                        },
                        new
                        {
                            Device_Id = 4,
                            Property_Id = 5,
                            Property_Value = "1200x1200 dpi"
                        },
                        new
                        {
                            Device_Id = 4,
                            Property_Id = 6,
                            Property_Value = "A4"
                        },
                        new
                        {
                            Device_Id = 5,
                            Property_Id = 4,
                            Property_Value = "15ppm"
                        },
                        new
                        {
                            Device_Id = 5,
                            Property_Id = 5,
                            Property_Value = "1440x720 dpi"
                        },
                        new
                        {
                            Device_Id = 5,
                            Property_Id = 6,
                            Property_Value = "A3"
                        },
                        new
                        {
                            Device_Id = 6,
                            Property_Id = 4,
                            Property_Value = "25ppm"
                        },
                        new
                        {
                            Device_Id = 6,
                            Property_Id = 5,
                            Property_Value = "4800x2400 dpi"
                        },
                        new
                        {
                            Device_Id = 6,
                            Property_Id = 6,
                            Property_Value = "Letter"
                        },
                        new
                        {
                            Device_Id = 7,
                            Property_Id = 7,
                            Property_Value = "48 Ports"
                        },
                        new
                        {
                            Device_Id = 7,
                            Property_Id = 8,
                            Property_Value = "1Gbps"
                        },
                        new
                        {
                            Device_Id = 7,
                            Property_Id = 9,
                            Property_Value = "Yes"
                        },
                        new
                        {
                            Device_Id = 8,
                            Property_Id = 7,
                            Property_Value = "24 Ports"
                        },
                        new
                        {
                            Device_Id = 8,
                            Property_Id = 8,
                            Property_Value = "1Gbps"
                        },
                        new
                        {
                            Device_Id = 8,
                            Property_Id = 9,
                            Property_Value = "Yes"
                        },
                        new
                        {
                            Device_Id = 9,
                            Property_Id = 7,
                            Property_Value = "8 Ports"
                        },
                        new
                        {
                            Device_Id = 9,
                            Property_Id = 8,
                            Property_Value = "1Gbps"
                        },
                        new
                        {
                            Device_Id = 9,
                            Property_Id = 9,
                            Property_Value = "No"
                        });
                });

            modelBuilder.Entity("DAL.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category_Id = 1,
                            Description = "Processor"
                        },
                        new
                        {
                            Id = 2,
                            Category_Id = 1,
                            Description = "Ram"
                        },
                        new
                        {
                            Id = 3,
                            Category_Id = 1,
                            Description = "Storage"
                        },
                        new
                        {
                            Id = 4,
                            Category_Id = 2,
                            Description = "Print Speed"
                        },
                        new
                        {
                            Id = 5,
                            Category_Id = 2,
                            Description = "Resolution"
                        },
                        new
                        {
                            Id = 6,
                            Category_Id = 2,
                            Description = "Paper Size"
                        },
                        new
                        {
                            Id = 7,
                            Category_Id = 3,
                            Description = "Ports"
                        },
                        new
                        {
                            Id = 8,
                            Category_Id = 3,
                            Description = "Speed"
                        },
                        new
                        {
                            Id = 9,
                            Category_Id = 3,
                            Description = "VLAN Support"
                        });
                });

            modelBuilder.Entity("DAL.Models.Device", b =>
                {
                    b.HasOne("DAL.Models.Category", "CategoryNavigation")
                        .WithMany()
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("DAL.Models.DevicePropertyValue", b =>
                {
                    b.HasOne("DAL.Models.Device", "DeviceNavigation")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("Device_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Property", "PropertyNavigation")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("Property_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceNavigation");

                    b.Navigation("PropertyNavigation");
                });

            modelBuilder.Entity("DAL.Models.Property", b =>
                {
                    b.HasOne("DAL.Models.Category", "CategoryNavigation")
                        .WithMany("Properties")
                        .HasForeignKey("Category_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryNavigation");
                });

            modelBuilder.Entity("DAL.Models.Category", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("DAL.Models.Device", b =>
                {
                    b.Navigation("DevicePropertyValues");
                });

            modelBuilder.Entity("DAL.Models.Property", b =>
                {
                    b.Navigation("DevicePropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
